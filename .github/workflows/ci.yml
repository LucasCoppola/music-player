name: ci

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  tests:
    name: Tests
    runs-on: ubuntu-latest

    env:
      PORT: 8080
      NODE_ENV: test

      DATABASE_HOST: ${{ secrets.DATABASE_HOST }}
      DATABASE_USERNAME: ${{ secrets.DATABASE_USERNAME }}
      DATABASE_PASSWORD: ${{ secrets.DATABASE_PASSWORD }}
      DATABASE_NAME: ${{ secrets.DATABASE_NAME }}

      JWT_SECRET: ${{ secrets.JWT_SECRET }}

    steps:
      - name: Check Repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm install

      - name: Run unit tests
        run: npm run test

      - name: Start Docker container
        run: |
          echo "DATABASE_HOST=${{ secrets.DATABASE_HOST }}" > .env.test
          echo "DATABASE_USERNAME=${{ secrets.DATABASE_USERNAME }}" >> .env.test
          echo "DATABASE_PASSWORD=${{ secrets.DATABASE_PASSWORD }}" >> .env.test
          echo "DATABASE_NAME=${{ secrets.DATABASE_NAME }}" >> .env.test
          npm run docker:test:up

      - name: Start NestJS application in test mode
        run: npm run start:test &

      - name: Wait for application health check
        run: |
          echo "Waiting for the application to be healthy..."
          for i in {1..5}; do
            if curl --silent --fail http://localhost:8080/healthz; then
              echo "Application is healthy!"
              exit 0
            fi
            echo "Health check failed, retrying in 5 seconds..."
            sleep 5
          done
          echo "Application health check failed after 5 retries."
          exit 1

      - name: Run e2e tests
        run: npm run test:e2e

      - name: Stop containers
        run: docker-compose down
